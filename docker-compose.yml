version: '3'

services:
  web:
    build: .
    container_name: ${PROJECT_NAME:-project}-web
    volumes:
      - ./:/var/www
      - node_modules:/var/www/node_modules
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - proxy
      - default
    environment:
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@database:3306/${MYSQL_DATABASE}?serverVersion=8&charset=utf8mb4
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
#      DATABASE_URL: mysql://app:!ChangeMe!@database:3306/app?serverVersion=8&charset=utf8mb4
#      APP_ENV: dev
#      APP_SECRET: 6ac5f54399d6b50ce81601093922741a
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.${PROJECT_NAME:-project}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME:-project}-secure.rule=Host(`${PROJECT_NAME:-project}.${DOMAIN:-localhost}`)"
  
  ###> doctrine/doctrine-bundle ###
  database:
    build: ./docker/mysql
    container_name: ${PROJECT_NAME:-project}-db
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER:-app}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
    #    ports:
    #      # <Port exposed> : < MySQL Port running inside container>
    #      - '3306:3306'
    networks:
      - default
    expose:
      # Opens port 3306 on the container
      - 3306
      # Where our data will be persisted
      #    volumes:
      #      - my-db:/var/lib/mysql
      #    volumes:
      #      - database_data:/etc/mysql/conf.d
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###
  
  ###> symfony/mailer ###
  mailer:
    image: schickling/mailcatcher
    container_name: ${PROJECT_NAME:-project}-mailer
    ports: [ 1025, 1080 ]
###< symfony/mailer ###

networks:
  proxy:
    external: true

volumes:
  node_modules:
  ###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
